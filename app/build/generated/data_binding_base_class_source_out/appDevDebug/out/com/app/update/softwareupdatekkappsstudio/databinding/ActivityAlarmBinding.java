// Generated by view binder compiler. Do not edit!
package com.app.update.softwareupdatekkappsstudio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.update.softwareupdatekkappsstudio.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAlarmBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final FrameLayout adFrame;

  @NonNull
  public final TextView alarmTitle;

  @NonNull
  public final ImageView closeBtn;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView remainToStop;

  private ActivityAlarmBinding(@NonNull RelativeLayout rootView, @NonNull FrameLayout adFrame,
      @NonNull TextView alarmTitle, @NonNull ImageView closeBtn, @NonNull TextView description,
      @NonNull TextView remainToStop) {
    this.rootView = rootView;
    this.adFrame = adFrame;
    this.alarmTitle = alarmTitle;
    this.closeBtn = closeBtn;
    this.description = description;
    this.remainToStop = remainToStop;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAlarmBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAlarmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_alarm, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAlarmBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ad_frame;
      FrameLayout adFrame = ViewBindings.findChildViewById(rootView, id);
      if (adFrame == null) {
        break missingId;
      }

      id = R.id.alarm_title;
      TextView alarmTitle = ViewBindings.findChildViewById(rootView, id);
      if (alarmTitle == null) {
        break missingId;
      }

      id = R.id.closeBtn;
      ImageView closeBtn = ViewBindings.findChildViewById(rootView, id);
      if (closeBtn == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.remain_to_stop;
      TextView remainToStop = ViewBindings.findChildViewById(rootView, id);
      if (remainToStop == null) {
        break missingId;
      }

      return new ActivityAlarmBinding((RelativeLayout) rootView, adFrame, alarmTitle, closeBtn,
          description, remainToStop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
