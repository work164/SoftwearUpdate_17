// Generated by view binder compiler. Do not edit!
package com.app.update.softwareupdatekkappsstudio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.app.update.softwareupdatekkappsstudio.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWifiDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout actionBar;

  @NonNull
  public final LottieAnimationView animationView;

  @NonNull
  public final ImageView animationViewwifi;

  @NonNull
  public final ImageFilterView backDevice;

  @NonNull
  public final ImageView btnInAppForwardDevice;

  @NonNull
  public final ConstraintLayout constraintLayout4;

  @NonNull
  public final FloatingActionButton fabUpdateIp;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final TextView textviewDns1;

  @NonNull
  public final TextView textviewDvs2;

  @NonNull
  public final TextView textviewGatewayIpValue;

  @NonNull
  public final TextView textviewMac;

  @NonNull
  public final TextView textviewMacAddressName;

  @NonNull
  public final TextView textviewMacAddressValue;

  @NonNull
  public final TextView textviewMacAddressValue2;

  @NonNull
  public final TextView textviewPublicIp;

  private FragmentWifiDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout actionBar, @NonNull LottieAnimationView animationView,
      @NonNull ImageView animationViewwifi, @NonNull ImageFilterView backDevice,
      @NonNull ImageView btnInAppForwardDevice, @NonNull ConstraintLayout constraintLayout4,
      @NonNull FloatingActionButton fabUpdateIp, @NonNull TextView textView4,
      @NonNull TextView textView5, @NonNull TextView textView7, @NonNull TextView textviewDns1,
      @NonNull TextView textviewDvs2, @NonNull TextView textviewGatewayIpValue,
      @NonNull TextView textviewMac, @NonNull TextView textviewMacAddressName,
      @NonNull TextView textviewMacAddressValue, @NonNull TextView textviewMacAddressValue2,
      @NonNull TextView textviewPublicIp) {
    this.rootView = rootView;
    this.actionBar = actionBar;
    this.animationView = animationView;
    this.animationViewwifi = animationViewwifi;
    this.backDevice = backDevice;
    this.btnInAppForwardDevice = btnInAppForwardDevice;
    this.constraintLayout4 = constraintLayout4;
    this.fabUpdateIp = fabUpdateIp;
    this.textView4 = textView4;
    this.textView5 = textView5;
    this.textView7 = textView7;
    this.textviewDns1 = textviewDns1;
    this.textviewDvs2 = textviewDvs2;
    this.textviewGatewayIpValue = textviewGatewayIpValue;
    this.textviewMac = textviewMac;
    this.textviewMacAddressName = textviewMacAddressName;
    this.textviewMacAddressValue = textviewMacAddressValue;
    this.textviewMacAddressValue2 = textviewMacAddressValue2;
    this.textviewPublicIp = textviewPublicIp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWifiDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWifiDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_wifi_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWifiDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_bar;
      AppBarLayout actionBar = ViewBindings.findChildViewById(rootView, id);
      if (actionBar == null) {
        break missingId;
      }

      id = R.id.animation_view;
      LottieAnimationView animationView = ViewBindings.findChildViewById(rootView, id);
      if (animationView == null) {
        break missingId;
      }

      id = R.id.animation_viewwifi;
      ImageView animationViewwifi = ViewBindings.findChildViewById(rootView, id);
      if (animationViewwifi == null) {
        break missingId;
      }

      id = R.id.backDevice;
      ImageFilterView backDevice = ViewBindings.findChildViewById(rootView, id);
      if (backDevice == null) {
        break missingId;
      }

      id = R.id.btn_inAppForwardDevice;
      ImageView btnInAppForwardDevice = ViewBindings.findChildViewById(rootView, id);
      if (btnInAppForwardDevice == null) {
        break missingId;
      }

      id = R.id.constraintLayout4;
      ConstraintLayout constraintLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout4 == null) {
        break missingId;
      }

      id = R.id.fab_update_ip;
      FloatingActionButton fabUpdateIp = ViewBindings.findChildViewById(rootView, id);
      if (fabUpdateIp == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.textview_dns1;
      TextView textviewDns1 = ViewBindings.findChildViewById(rootView, id);
      if (textviewDns1 == null) {
        break missingId;
      }

      id = R.id.textview_dvs2;
      TextView textviewDvs2 = ViewBindings.findChildViewById(rootView, id);
      if (textviewDvs2 == null) {
        break missingId;
      }

      id = R.id.textview_gateway_ip_value;
      TextView textviewGatewayIpValue = ViewBindings.findChildViewById(rootView, id);
      if (textviewGatewayIpValue == null) {
        break missingId;
      }

      id = R.id.textview_mac;
      TextView textviewMac = ViewBindings.findChildViewById(rootView, id);
      if (textviewMac == null) {
        break missingId;
      }

      id = R.id.textview_mac_address_name;
      TextView textviewMacAddressName = ViewBindings.findChildViewById(rootView, id);
      if (textviewMacAddressName == null) {
        break missingId;
      }

      id = R.id.textview_mac_address_value;
      TextView textviewMacAddressValue = ViewBindings.findChildViewById(rootView, id);
      if (textviewMacAddressValue == null) {
        break missingId;
      }

      id = R.id.textview_mac_address_value2;
      TextView textviewMacAddressValue2 = ViewBindings.findChildViewById(rootView, id);
      if (textviewMacAddressValue2 == null) {
        break missingId;
      }

      id = R.id.textview_public_ip;
      TextView textviewPublicIp = ViewBindings.findChildViewById(rootView, id);
      if (textviewPublicIp == null) {
        break missingId;
      }

      return new FragmentWifiDetailsBinding((ConstraintLayout) rootView, actionBar, animationView,
          animationViewwifi, backDevice, btnInAppForwardDevice, constraintLayout4, fabUpdateIp,
          textView4, textView5, textView7, textviewDns1, textviewDvs2, textviewGatewayIpValue,
          textviewMac, textviewMacAddressName, textviewMacAddressValue, textviewMacAddressValue2,
          textviewPublicIp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
