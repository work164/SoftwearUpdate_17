// Generated by view binder compiler. Do not edit!
package com.app.update.softwareupdatekkappsstudio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.update.softwareupdatekkappsstudio.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backIcon;

  @NonNull
  public final ImageView iconView;

  @NonNull
  public final ConstraintLayout menues;

  @NonNull
  public final TextView title;

  @NonNull
  public final View topActionBar;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView backIcon,
      @NonNull ImageView iconView, @NonNull ConstraintLayout menues, @NonNull TextView title,
      @NonNull View topActionBar) {
    this.rootView = rootView;
    this.backIcon = backIcon;
    this.iconView = iconView;
    this.menues = menues;
    this.title = title;
    this.topActionBar = topActionBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backIcon;
      ImageView backIcon = ViewBindings.findChildViewById(rootView, id);
      if (backIcon == null) {
        break missingId;
      }

      id = R.id.iconView;
      ImageView iconView = ViewBindings.findChildViewById(rootView, id);
      if (iconView == null) {
        break missingId;
      }

      id = R.id.menues;
      ConstraintLayout menues = ViewBindings.findChildViewById(rootView, id);
      if (menues == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.topActionBar;
      View topActionBar = ViewBindings.findChildViewById(rootView, id);
      if (topActionBar == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, backIcon, iconView, menues,
          title, topActionBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
