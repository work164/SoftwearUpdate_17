// Generated by view binder compiler. Do not edit!
package com.app.update.softwareupdatekkappsstudio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.update.softwareupdatekkappsstudio.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout actionBar;

  @NonNull
  public final ImageFilterView backDevice;

  @NonNull
  public final ImageView btnInAppForwardDevice;

  @NonNull
  public final ImageView icFeedback;

  @NonNull
  public final ImageView icMoreApps;

  @NonNull
  public final ImageView icNotification;

  @NonNull
  public final ImageView icPrivacy;

  @NonNull
  public final ImageView icRate;

  @NonNull
  public final ImageView icShare;

  @NonNull
  public final ConstraintLayout menues;

  @NonNull
  public final FrameLayout settingsNativeAdOrBanner;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout actionBar, @NonNull ImageFilterView backDevice,
      @NonNull ImageView btnInAppForwardDevice, @NonNull ImageView icFeedback,
      @NonNull ImageView icMoreApps, @NonNull ImageView icNotification,
      @NonNull ImageView icPrivacy, @NonNull ImageView icRate, @NonNull ImageView icShare,
      @NonNull ConstraintLayout menues, @NonNull FrameLayout settingsNativeAdOrBanner) {
    this.rootView = rootView;
    this.actionBar = actionBar;
    this.backDevice = backDevice;
    this.btnInAppForwardDevice = btnInAppForwardDevice;
    this.icFeedback = icFeedback;
    this.icMoreApps = icMoreApps;
    this.icNotification = icNotification;
    this.icPrivacy = icPrivacy;
    this.icRate = icRate;
    this.icShare = icShare;
    this.menues = menues;
    this.settingsNativeAdOrBanner = settingsNativeAdOrBanner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_bar;
      AppBarLayout actionBar = ViewBindings.findChildViewById(rootView, id);
      if (actionBar == null) {
        break missingId;
      }

      id = R.id.backDevice;
      ImageFilterView backDevice = ViewBindings.findChildViewById(rootView, id);
      if (backDevice == null) {
        break missingId;
      }

      id = R.id.btn_inAppForwardDevice;
      ImageView btnInAppForwardDevice = ViewBindings.findChildViewById(rootView, id);
      if (btnInAppForwardDevice == null) {
        break missingId;
      }

      id = R.id.ic_feedback;
      ImageView icFeedback = ViewBindings.findChildViewById(rootView, id);
      if (icFeedback == null) {
        break missingId;
      }

      id = R.id.ic_more_apps;
      ImageView icMoreApps = ViewBindings.findChildViewById(rootView, id);
      if (icMoreApps == null) {
        break missingId;
      }

      id = R.id.ic_notification;
      ImageView icNotification = ViewBindings.findChildViewById(rootView, id);
      if (icNotification == null) {
        break missingId;
      }

      id = R.id.ic_privacy;
      ImageView icPrivacy = ViewBindings.findChildViewById(rootView, id);
      if (icPrivacy == null) {
        break missingId;
      }

      id = R.id.ic_rate;
      ImageView icRate = ViewBindings.findChildViewById(rootView, id);
      if (icRate == null) {
        break missingId;
      }

      id = R.id.ic_share;
      ImageView icShare = ViewBindings.findChildViewById(rootView, id);
      if (icShare == null) {
        break missingId;
      }

      id = R.id.menues;
      ConstraintLayout menues = ViewBindings.findChildViewById(rootView, id);
      if (menues == null) {
        break missingId;
      }

      id = R.id.settingsNativeAdOrBanner;
      FrameLayout settingsNativeAdOrBanner = ViewBindings.findChildViewById(rootView, id);
      if (settingsNativeAdOrBanner == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, actionBar, backDevice,
          btnInAppForwardDevice, icFeedback, icMoreApps, icNotification, icPrivacy, icRate, icShare,
          menues, settingsNativeAdOrBanner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
