// Generated by view binder compiler. Do not edit!
package com.app.update.softwareupdatekkappsstudio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.update.softwareupdatekkappsstudio.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SystemAppBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView check;

  @NonNull
  public final Button checkMove;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView mainText1;

  @NonNull
  public final TextView sizeMb;

  @NonNull
  public final TextView sizeText;

  @NonNull
  public final ImageView systemIcon;

  private SystemAppBinding(@NonNull ConstraintLayout rootView, @NonNull TextView check,
      @NonNull Button checkMove, @NonNull TextView date, @NonNull TextView mainText1,
      @NonNull TextView sizeMb, @NonNull TextView sizeText, @NonNull ImageView systemIcon) {
    this.rootView = rootView;
    this.check = check;
    this.checkMove = checkMove;
    this.date = date;
    this.mainText1 = mainText1;
    this.sizeMb = sizeMb;
    this.sizeText = sizeText;
    this.systemIcon = systemIcon;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SystemAppBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SystemAppBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.system_app, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SystemAppBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.check;
      TextView check = ViewBindings.findChildViewById(rootView, id);
      if (check == null) {
        break missingId;
      }

      id = R.id.checkMove;
      Button checkMove = ViewBindings.findChildViewById(rootView, id);
      if (checkMove == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.mainText1;
      TextView mainText1 = ViewBindings.findChildViewById(rootView, id);
      if (mainText1 == null) {
        break missingId;
      }

      id = R.id.sizeMb;
      TextView sizeMb = ViewBindings.findChildViewById(rootView, id);
      if (sizeMb == null) {
        break missingId;
      }

      id = R.id.sizeText;
      TextView sizeText = ViewBindings.findChildViewById(rootView, id);
      if (sizeText == null) {
        break missingId;
      }

      id = R.id.systemIcon;
      ImageView systemIcon = ViewBindings.findChildViewById(rootView, id);
      if (systemIcon == null) {
        break missingId;
      }

      return new SystemAppBinding((ConstraintLayout) rootView, check, checkMove, date, mainText1,
          sizeMb, sizeText, systemIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
