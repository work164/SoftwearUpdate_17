// Generated by view binder compiler. Do not edit!
package com.app.update.softwareupdatekkappsstudio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.app.update.softwareupdatekkappsstudio.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStartBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout admobbannercontainer;

  @NonNull
  public final ImageView animationView;

  @NonNull
  public final AppCompatButton btnStart;

  @NonNull
  public final TextView content;

  @NonNull
  public final LottieAnimationView progressbarlottie;

  @NonNull
  public final TextView textView8;

  @NonNull
  public final TextView tvterms;

  private ActivityStartBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout admobbannercontainer, @NonNull ImageView animationView,
      @NonNull AppCompatButton btnStart, @NonNull TextView content,
      @NonNull LottieAnimationView progressbarlottie, @NonNull TextView textView8,
      @NonNull TextView tvterms) {
    this.rootView = rootView;
    this.admobbannercontainer = admobbannercontainer;
    this.animationView = animationView;
    this.btnStart = btnStart;
    this.content = content;
    this.progressbarlottie = progressbarlottie;
    this.textView8 = textView8;
    this.tvterms = tvterms;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_start, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.admobbannercontainer;
      LinearLayout admobbannercontainer = ViewBindings.findChildViewById(rootView, id);
      if (admobbannercontainer == null) {
        break missingId;
      }

      id = R.id.animation_view;
      ImageView animationView = ViewBindings.findChildViewById(rootView, id);
      if (animationView == null) {
        break missingId;
      }

      id = R.id.btnStart;
      AppCompatButton btnStart = ViewBindings.findChildViewById(rootView, id);
      if (btnStart == null) {
        break missingId;
      }

      id = R.id.content;
      TextView content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.progressbarlottie;
      LottieAnimationView progressbarlottie = ViewBindings.findChildViewById(rootView, id);
      if (progressbarlottie == null) {
        break missingId;
      }

      id = R.id.textView8;
      TextView textView8 = ViewBindings.findChildViewById(rootView, id);
      if (textView8 == null) {
        break missingId;
      }

      id = R.id.tvterms;
      TextView tvterms = ViewBindings.findChildViewById(rootView, id);
      if (tvterms == null) {
        break missingId;
      }

      return new ActivityStartBinding((ConstraintLayout) rootView, admobbannercontainer,
          animationView, btnStart, content, progressbarlottie, textView8, tvterms);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
